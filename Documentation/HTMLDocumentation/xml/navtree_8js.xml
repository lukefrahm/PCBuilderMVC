<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="navtree_8js" kind="file" language="Javascript">
    <compoundname>navtree.js</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="navtree_8js_1aee39e0d4ab2646ada03125bd7e750cf7" prot="public" static="no" mutable="no">
        <type>var</type>
        <definition>var navTreeSubIndices</definition>
        <argsstring></argsstring>
        <name>navTreeSubIndices</name>
        <initializer>= new Array()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="1" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="1" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="navtree_8js_1a588cb5a5004d817923eb3f45c8f0f7c7" prot="public" static="no" mutable="no">
        <type>var</type>
        <definition>var animationInProgress</definition>
        <argsstring></argsstring>
        <name>animationInProgress</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="127" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="navtree_8js_1a819e84218d50e54d98161b272d1d5b01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function getData</definition>
        <argsstring>(varName)</argsstring>
        <name>getData</name>
        <param>
          <type>varName</type>
          <defname>varName</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="3" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="3" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a9336c21407bb7ced644331eb7a2a6e35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function stripPath</definition>
        <argsstring>(uri)</argsstring>
        <name>stripPath</name>
        <param>
          <type>uri</type>
          <defname>uri</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="10" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a70bc36adda6141a703fc7ee2b772ec63" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function stripPath2</definition>
        <argsstring>(uri)</argsstring>
        <name>stripPath2</name>
        <param>
          <type>uri</type>
          <defname>uri</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="15" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aaeb20639619e1371c030d36a7109b27b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function hashValue</definition>
        <argsstring>()</argsstring>
        <name>hashValue</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="23" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="23" bodyend="26"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a20695277530a1a04eef8d289177a5e40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function hashUrl</definition>
        <argsstring>()</argsstring>
        <name>hashUrl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="28" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="28" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a364b3f4132309fa9aae78585cf2cb772" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function pathName</definition>
        <argsstring>()</argsstring>
        <name>pathName</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="33" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="33" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1ac49af616f532f2364be9f58280469d33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function localStorageSupported</definition>
        <argsstring>()</argsstring>
        <name>localStorageSupported</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="38" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="38" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1ade730323aadb971c053136b7758c9dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function storeLink</definition>
        <argsstring>(link)</argsstring>
        <name>storeLink</name>
        <param>
          <type>link</type>
          <defname>link</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="49" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="49" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1abdf8e0e69c89803c1b84784a13b7fd2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function deleteLink</definition>
        <argsstring>()</argsstring>
        <name>deleteLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="56" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="56" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aaa2d293f55e5fe3620af4f9a2836e428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function cachedLink</definition>
        <argsstring>()</argsstring>
        <name>cachedLink</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="63" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="63" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a32f4aac18d03aee747b55dea195731ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function getScript</definition>
        <argsstring>(scriptName, func, show)</argsstring>
        <name>getScript</name>
        <param>
          <type>scriptName</type>
          <defname>scriptName</defname>
        </param>
        <param>
          <type>func</type>
          <defname>func</defname>
        </param>
        <param>
          <type>show</type>
          <defname>show</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="72" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="72" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a4d8f406d49520a0cede2e48347a3d7aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function createIndent</definition>
        <argsstring>(o, domNode, node, level)</argsstring>
        <name>createIndent</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>domNode</type>
          <defname>domNode</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type>level</type>
          <defname>level</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="91" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="91" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aee1fc3771eeb15da54962a03da1f3c11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function gotoAnchor</definition>
        <argsstring>(anchor, aname, updateLocation)</argsstring>
        <name>gotoAnchor</name>
        <param>
          <type>anchor</type>
          <defname>anchor</defname>
        </param>
        <param>
          <type>aname</type>
          <defname>aname</defname>
        </param>
        <param>
          <type>updateLocation</type>
          <defname>updateLocation</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="129" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="129" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aa2418b16159e9502e990f97ea6ec26c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function newNode</definition>
        <argsstring>(o, po, text, link, childrenData, lastNode)</argsstring>
        <name>newNode</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>po</type>
          <defname>po</defname>
        </param>
        <param>
          <type>text</type>
          <defname>text</defname>
        </param>
        <param>
          <type>link</type>
          <defname>link</defname>
        </param>
        <param>
          <type>childrenData</type>
          <defname>childrenData</defname>
        </param>
        <param>
          <type>lastNode</type>
          <defname>lastNode</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="157" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="157" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1af98a8e3534da945399ea20870c0f3e92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function showRoot</definition>
        <argsstring>()</argsstring>
        <name>showRoot</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="238" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="238" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a4eb1f166c9d93b198e1621a4c787a412" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function expandNode</definition>
        <argsstring>(o, node, imm, showRoot)</argsstring>
        <name>expandNode</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type>imm</type>
          <defname>imm</defname>
        </param>
        <param>
          <type>showRoot</type>
          <defname>showRoot</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="253" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="253" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a23b68d2deb28f9c2678f546e2d60e5ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function glowEffect</definition>
        <argsstring>(n, duration)</argsstring>
        <name>glowEffect</name>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <param>
          <type>duration</type>
          <defname>duration</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="281" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="281" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a524fa9bfd80c70bf3a84696b2077eadb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function highlightAnchor</definition>
        <argsstring>()</argsstring>
        <name>highlightAnchor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="288" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="288" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a0dbf0d5f6126afd88420745f7d3c202d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function selectAndHighlight</definition>
        <argsstring>(hash, n)</argsstring>
        <name>selectAndHighlight</name>
        <param>
          <type>hash</type>
          <defname>hash</defname>
        </param>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="307" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="307" bodyend="328"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a0238ad48be94f9f5fd305ea40b8f64ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function showNode</definition>
        <argsstring>(o, node, index, hash)</argsstring>
        <name>showNode</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>node</type>
          <defname>node</defname>
        </param>
        <param>
          <type>index</type>
          <defname>index</defname>
        </param>
        <param>
          <type>hash</type>
          <defname>hash</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="330" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="330" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aa78016020f40c28356aefd325cd4df74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function removeToInsertLater</definition>
        <argsstring>(element)</argsstring>
        <name>removeToInsertLater</name>
        <param>
          <type>element</type>
          <defname>element</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="371" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="371" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a256aa4fbee866e9227f78e82e9f258bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function getNode</definition>
        <argsstring>(o, po)</argsstring>
        <name>getNode</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>po</type>
          <defname>po</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="384" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="384" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a0e6a2d65190a43246d668bba554243e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function gotoNode</definition>
        <argsstring>(o, subIndex, root, hash, relpath)</argsstring>
        <name>gotoNode</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>subIndex</type>
          <defname>subIndex</defname>
        </param>
        <param>
          <type>root</type>
          <defname>root</defname>
        </param>
        <param>
          <type>hash</type>
          <defname>hash</defname>
        </param>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="397" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="397" bodyend="410"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a21beb601032fff375100a907f32129a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function navTo</definition>
        <argsstring>(o, root, hash, relpath)</argsstring>
        <name>navTo</name>
        <param>
          <type>o</type>
          <defname>o</defname>
        </param>
        <param>
          <type>root</type>
          <defname>root</defname>
        </param>
        <param>
          <type>hash</type>
          <defname>hash</defname>
        </param>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="412" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="412" bodyend="440"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a6522b3f540ead0febf12ccf5fc1f04c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function showSyncOff</definition>
        <argsstring>(n, relpath)</argsstring>
        <name>showSyncOff</name>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="442" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="442" bodyend="445"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a84095390aca39b6cb693d3fb22d32dd0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function showSyncOn</definition>
        <argsstring>(n, relpath)</argsstring>
        <name>showSyncOn</name>
        <param>
          <type>n</type>
          <defname>n</defname>
        </param>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="447" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="447" bodyend="450"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1a646cb31d83b39aafec92e0e1d123563a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function toggleSyncButton</definition>
        <argsstring>(relpath)</argsstring>
        <name>toggleSyncButton</name>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="452" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="452" bodyend="464"/>
      </memberdef>
      <memberdef kind="function" id="navtree_8js_1aa7b3067e7ef0044572ba86240b1e58ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function initNavTree</definition>
        <argsstring>(toroot, relpath)</argsstring>
        <name>initNavTree</name>
        <param>
          <type>toroot</type>
          <defname>toroot</defname>
        </param>
        <param>
          <type>relpath</type>
          <defname>relpath</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" line="466" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js" bodystart="466" bodyend="522"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal">var<sp/>navTreeSubIndices<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array();</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getData(varName)</highlight></codeline>
<codeline lineno="4"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/>var<sp/>i<sp/>=<sp/>varName.lastIndexOf(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/>var<sp/>n<sp/>=<sp/>i&gt;=0<sp/>?<sp/>varName.substring(i+1)<sp/>:<sp/>varName;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>eval(n.replace(/\-/g,</highlight><highlight class="charliteral">&apos;_&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="8"><highlight class="normal">}</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stripPath(uri)</highlight></codeline>
<codeline lineno="11"><highlight class="normal">{</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>uri.substring(uri.lastIndexOf(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">)+1);</highlight></codeline>
<codeline lineno="13"><highlight class="normal">}</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>stripPath2(uri)</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>var<sp/>i<sp/>=<sp/>uri.lastIndexOf(</highlight><highlight class="charliteral">&apos;/&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/>var<sp/>s<sp/>=<sp/>uri.substring(i+1);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/>var<sp/>m<sp/>=<sp/>uri.substring(0,i+1).match(/\/d\w\/d\w\w\/$/);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m<sp/>?<sp/>uri.substring(i-6)<sp/>:<sp/>s;</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>hashValue()</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$(location).attr(</highlight><highlight class="stringliteral">&apos;hash&apos;</highlight><highlight class="normal">).substring(1).replace(/[^\w\-]/g,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>hashUrl()</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">+hashValue();</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>pathName()</highlight></codeline>
<codeline lineno="34"><highlight class="normal">{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>$(location).attr(</highlight><highlight class="stringliteral">&apos;pathname&apos;</highlight><highlight class="normal">).replace(/[^-A-Za-z0-9+&amp;@#/%?=~_|!:,.;\(\)]/g,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>localStorageSupported()</highlight></codeline>
<codeline lineno="39"><highlight class="normal">{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;localStorage&apos;</highlight><highlight class="normal"><sp/>in<sp/>window<sp/>&amp;&amp;<sp/>window[</highlight><highlight class="stringliteral">&apos;localStorage&apos;</highlight><highlight class="normal">]<sp/>!==<sp/>null<sp/>&amp;&amp;<sp/>window.localStorage.getItem;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal">(e)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal">}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>storeLink(link)</highlight></codeline>
<codeline lineno="50"><highlight class="normal">{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!$(</highlight><highlight class="stringliteral">&quot;#nav-sync&quot;</highlight><highlight class="normal">).hasClass(</highlight><highlight class="stringliteral">&apos;sync&apos;</highlight><highlight class="normal">)<sp/>&amp;&amp;<sp/>localStorageSupported())<sp/>{</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>window.localStorage.setItem(</highlight><highlight class="stringliteral">&apos;navpath&apos;</highlight><highlight class="normal">,link);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="normal">}</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>deleteLink()</highlight></codeline>
<codeline lineno="57"><highlight class="normal">{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>window.localStorage.setItem(</highlight><highlight class="stringliteral">&apos;navpath&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>cachedLink()</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>window.localStorage.getItem(</highlight><highlight class="stringliteral">&apos;navpath&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="normal">}</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getScript(scriptName,func,show)</highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>var<sp/>head<sp/>=<sp/>document.getElementsByTagName(</highlight><highlight class="stringliteral">&quot;head&quot;</highlight><highlight class="normal">)[0];<sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>var<sp/>script<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&apos;script&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>script.id<sp/>=<sp/>scriptName;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>script.type<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;text/javascript&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>script.onload<sp/>=<sp/>func;<sp/></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/>script.src<sp/>=<sp/>scriptName+</highlight><highlight class="stringliteral">&apos;.js&apos;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($.browser.msie<sp/>&amp;&amp;<sp/>$.browser.version&lt;=8)<sp/>{<sp/></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>script.onload<sp/>does<sp/>not<sp/>work<sp/>with<sp/>older<sp/>versions<sp/>of<sp/>IE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>script.onreadystatechange<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(script.readyState==</highlight><highlight class="stringliteral">&apos;complete&apos;</highlight><highlight class="normal"><sp/>||<sp/>script.readyState==</highlight><highlight class="stringliteral">&apos;loaded&apos;</highlight><highlight class="normal">)<sp/>{<sp/></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func();<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(show)<sp/>showRoot();<sp/></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>head.appendChild(script);<sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>createIndent(o,domNode,node,level)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>var<sp/>level=-1;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>var<sp/>n<sp/>=<sp/>node;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n.parentNode)<sp/>{<sp/>level++;<sp/>n=n.parentNode;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.childrenData)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>imgNode<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;img&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.style.paddingLeft=(16*level).toString()+</highlight><highlight class="stringliteral">&apos;px&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.width<sp/><sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.height<sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.border<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>node.plus_img<sp/>=<sp/>imgNode;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.href<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;javascript:void(0)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.onclick<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.expanded)<sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).slideUp(</highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.src<sp/>=<sp/>node.relpath+</highlight><highlight class="stringliteral">&quot;arrowright.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>node,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>node.expandToggle.appendChild(imgNode);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>domNode.appendChild(node.expandToggle);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>imgNode.src<sp/>=<sp/>node.relpath+</highlight><highlight class="stringliteral">&quot;arrowright.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>span<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;span&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>span.style.display<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;inline-block&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>span.style.width<sp/><sp/><sp/>=<sp/>16*(level+1)+</highlight><highlight class="stringliteral">&apos;px&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>span.style.height<sp/><sp/>=<sp/></highlight><highlight class="stringliteral">&apos;22px&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>span.innerHTML<sp/>=<sp/></highlight><highlight class="stringliteral">&apos;&amp;#160;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>domNode.appendChild(span);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal">var<sp/>animationInProgress<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>gotoAnchor(anchor,aname,updateLocation)</highlight></codeline>
<codeline lineno="130"><highlight class="normal">{</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>var<sp/>pos,<sp/>docContent<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&apos;#doc-content&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>var<sp/>ancParent<sp/>=<sp/>$(anchor.parent());</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ancParent.hasClass(</highlight><highlight class="stringliteral">&apos;memItemLeft&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.hasClass(</highlight><highlight class="stringliteral">&apos;fieldname&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.hasClass(</highlight><highlight class="stringliteral">&apos;fieldtype&apos;</highlight><highlight class="normal">)<sp/>||</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ancParent.is(</highlight><highlight class="stringliteral">&apos;:header&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>ancParent.position().top;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor.position())<sp/>{</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>anchor.position().top;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos)<sp/>{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>dist<sp/>=<sp/>Math.abs(Math.min(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos-docContent.offset().top,</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docContent[0].scrollHeight-</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>docContent.height()-docContent.scrollTop()));</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>animationInProgress=</highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>docContent.animate({</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>scrollTop:<sp/>pos<sp/>+<sp/>docContent.scrollTop()<sp/>-<sp/>docContent.offset().top</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>},Math.max(50,Math.min(500,dist)),</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(updateLocation)<sp/>window.location.href=aname;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>animationInProgress=</highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>newNode(o,<sp/>po,<sp/>text,<sp/>link,<sp/>childrenData,<sp/>lastNode)</highlight></codeline>
<codeline lineno="158"><highlight class="normal">{</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/>var<sp/>node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Object();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>node.children<sp/>=<sp/>Array();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>node.childrenData<sp/>=<sp/>childrenData;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>node.depth<sp/>=<sp/>po.depth<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/>node.relpath<sp/>=<sp/>po.relpath;</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>node.isLast<sp/>=<sp/>lastNode;</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>node.li<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;li&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>po.getChildrenUL().appendChild(node.li);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>node.parentNode<sp/>=<sp/>po;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>node.itemDiv<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;div&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/>node.itemDiv.className<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;item&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>node.labelSpan<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;span&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/>node.labelSpan.className<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;label&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>createIndent(o,node.itemDiv,node,0);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>node.itemDiv.appendChild(node.labelSpan);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/>node.li.appendChild(node.itemDiv);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>var<sp/>a<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;a&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>node.labelSpan.appendChild(a);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>node.label<sp/>=<sp/>document.createTextNode(text);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>node.expanded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/>a.appendChild(node.label);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link)<sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>url;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link.substring(0,1)==</highlight><highlight class="charliteral">&apos;^&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/>link.substring(1);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>link<sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>url<sp/>=<sp/>node.relpath+link;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>a.className<sp/>=<sp/>stripPath(link.replace(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">,</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link.indexOf(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)!=-1)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>aname<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">+link.split(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)[1];</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>srcPage<sp/>=<sp/>stripPath(pathName());</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>targetPage<sp/>=<sp/>stripPath(link.split(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">)[0]);</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/>srcPage!=targetPage<sp/>?<sp/>url<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;javascript:void(0)&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storeLink(link);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!$(a).parent().parent().hasClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeAttr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(a).parent().parent().addClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(a).parent().parent().attr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>anchor<sp/>=<sp/>$(aname);</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotoAnchor(anchor,aname,</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/>url;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{<sp/>storeLink(link);<sp/>}</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(childrenData<sp/>!=<sp/>null)<sp/></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.className<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;nolink&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.href<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;javascript:void(0)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>a.onclick<sp/>=<sp/>node.expandToggle.onclick;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>node.childrenUL<sp/>=<sp/>null;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/>node.getChildrenUL<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node.childrenUL)<sp/>{</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;ul&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL.className<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;children_ul&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenUL.style.display<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;none&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.li.appendChild(node.childrenUL);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node.childrenUL;</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>node;</highlight></codeline>
<codeline lineno="236"><highlight class="normal">}</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>showRoot()</highlight></codeline>
<codeline lineno="239"><highlight class="normal">{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>var<sp/>headerHeight<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&quot;#top&quot;</highlight><highlight class="normal">).height();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>var<sp/>footerHeight<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&quot;#nav-path&quot;</highlight><highlight class="normal">).height();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>var<sp/>windowHeight<sp/>=<sp/>$(window).height()<sp/>-<sp/>headerHeight<sp/>-<sp/>footerHeight;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>(){<sp/></highlight><highlight class="comment">//<sp/>retry<sp/>until<sp/>we<sp/>can<sp/>scroll<sp/>to<sp/>the<sp/>selected<sp/>item</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>navtree=$(</highlight><highlight class="stringliteral">&apos;#nav-tree&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navtree.scrollTo(</highlight><highlight class="stringliteral">&apos;#selected&apos;</highlight><highlight class="normal">,0,{offset:-windowHeight/2});</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(err)<sp/>{</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>setTimeout(arguments.callee,<sp/>0);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>})();</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>expandNode(o,<sp/>node,<sp/>imm,<sp/>showRoot)</highlight></codeline>
<codeline lineno="254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.childrenData<sp/>&amp;&amp;<sp/>!node.expanded)<sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeof(node.childrenData)===</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/><sp/><sp/><sp/>=<sp/>node.childrenData;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getScript(node.relpath+varName,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>node,<sp/>imm,<sp/>showRoot);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},<sp/>showRoot);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node.childrenVisited)<sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getNode(o,<sp/>node);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(imm<sp/>||<sp/>($.browser.msie<sp/>&amp;&amp;<sp/>$.browser.version&gt;8))<sp/>{<sp/></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>somehow<sp/>slideDown<sp/>jumps<sp/>to<sp/>the<sp/>start<sp/>of<sp/>tree<sp/>for<sp/>IE9<sp/>:-(</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).show();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).slideDown(</highlight><highlight class="stringliteral">&quot;fast&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node.isLast)<sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.src<sp/>=<sp/>node.relpath+</highlight><highlight class="stringliteral">&quot;arrowdown.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.src<sp/>=<sp/>node.relpath+</highlight><highlight class="stringliteral">&quot;arrowdown.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="279"><highlight class="normal">}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>glowEffect(n,duration)</highlight></codeline>
<codeline lineno="282"><highlight class="normal">{</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>n.addClass(</highlight><highlight class="stringliteral">&apos;glow&apos;</highlight><highlight class="normal">).delay(duration).queue(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(next){</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>$(</highlight><highlight class="keyword">this</highlight><highlight class="normal">).removeClass(</highlight><highlight class="stringliteral">&apos;glow&apos;</highlight><highlight class="normal">);next();</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>highlightAnchor()</highlight></codeline>
<codeline lineno="289"><highlight class="normal">{</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>var<sp/>aname<sp/>=<sp/>hashUrl();</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/>var<sp/>anchor<sp/>=<sp/>$(aname);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor.parent().attr(</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">&apos;memItemLeft&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>rows<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&apos;.memberdecls<sp/>tr[class$=&quot;&apos;</highlight><highlight class="normal">+hashValue()+</highlight><highlight class="stringliteral">&apos;&quot;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(rows.children(),300);<sp/></highlight><highlight class="comment">//<sp/>member<sp/>without<sp/>details</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor.parent().attr(</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">&apos;fieldname&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent().parent(),1000);<sp/></highlight><highlight class="comment">//<sp/>enum<sp/>value</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor.parent().attr(</highlight><highlight class="stringliteral">&apos;class&apos;</highlight><highlight class="normal">)==</highlight><highlight class="stringliteral">&apos;fieldtype&apos;</highlight><highlight class="normal">){</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent().parent(),1000);<sp/></highlight><highlight class="comment">//<sp/>struct<sp/>field</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(anchor.parent().is(</highlight><highlight class="stringliteral">&quot;:header&quot;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent(),1000);<sp/></highlight><highlight class="comment">//<sp/>section<sp/>header</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.next(),1000);<sp/></highlight><highlight class="comment">//<sp/>normal<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>gotoAnchor(anchor,aname,</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>selectAndHighlight(hash,n)</highlight></codeline>
<codeline lineno="308"><highlight class="normal">{</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>var<sp/>a;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash)<sp/>{</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>link=stripPath(pathName())+</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">+hash.substring(1);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/>a=$(</highlight><highlight class="stringliteral">&apos;.item<sp/>a[class$=&quot;&apos;</highlight><highlight class="normal">+link+</highlight><highlight class="stringliteral">&apos;&quot;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a<sp/>&amp;&amp;<sp/>a.length)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>a.parent().parent().addClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/>a.parent().parent().attr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>highlightAnchor();</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n)<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/>$(n.itemDiv).addClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>$(n.itemDiv).attr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($(</highlight><highlight class="stringliteral">&apos;#nav-tree-contents<sp/>.item:first&apos;</highlight><highlight class="normal">).hasClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;#nav-sync&apos;</highlight><highlight class="normal">).css(</highlight><highlight class="stringliteral">&apos;top&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;30px&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;#nav-sync&apos;</highlight><highlight class="normal">).css(</highlight><highlight class="stringliteral">&apos;top&apos;</highlight><highlight class="normal">,</highlight><highlight class="stringliteral">&apos;5px&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/>showRoot();</highlight></codeline>
<codeline lineno="328"><highlight class="normal">}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>showNode(o,<sp/>node,<sp/>index,<sp/>hash)</highlight></codeline>
<codeline lineno="331"><highlight class="normal">{</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(node<sp/>&amp;&amp;<sp/>node.childrenData)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeof(node.childrenData)===</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/><sp/><sp/><sp/>=<sp/>node.childrenData;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>getScript(node.relpath+varName,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,node,index,hash);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!node.childrenVisited)<sp/>{</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getNode(o,<sp/>node);</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>$(node.getChildrenUL()).css({</highlight><highlight class="stringliteral">&apos;display&apos;</highlight><highlight class="normal">:</highlight><highlight class="stringliteral">&apos;block&apos;</highlight><highlight class="normal">});</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.plus_img.src<sp/>=<sp/>node.relpath+</highlight><highlight class="stringliteral">&quot;arrowdown.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>n<sp/>=<sp/>node.children[o.breadcrumbs[index]];</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index+1&lt;o.breadcrumbs.length)<sp/>{</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,n,index+1,hash);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(typeof(n.childrenData)===</highlight><highlight class="stringliteral">&apos;string&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>varName<sp/>=<sp/>n.childrenData;</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getScript(n.relpath+varName,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n.childrenData<sp/>=<sp/>getData(varName);</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node.expanded=false;</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>showNode(o,node,index,hash);<sp/></highlight><highlight class="comment">//<sp/>retry<sp/>with<sp/>child<sp/>node<sp/>expanded</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>rootBase<sp/>=<sp/>stripPath(o.toroot.replace(/\..+$/,<sp/></highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rootBase==</highlight><highlight class="stringliteral">&quot;index&quot;</highlight><highlight class="normal"><sp/>||<sp/>rootBase==</highlight><highlight class="stringliteral">&quot;pages&quot;</highlight><highlight class="normal"><sp/>||<sp/>rootBase==</highlight><highlight class="stringliteral">&quot;search&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>expandNode(o,<sp/>n,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>selectAndHighlight(hash,n);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/>selectAndHighlight(hash);</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal">}</highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>removeToInsertLater(element)<sp/>{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>var<sp/>parentNode<sp/>=<sp/>element.parentNode;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>var<sp/>nextSibling<sp/>=<sp/>element.nextSibling;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>parentNode.removeChild(element);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nextSibling)<sp/>{</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parentNode.insertBefore(element,<sp/>nextSibling);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>parentNode.appendChild(element);</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>getNode(o,<sp/>po)</highlight></codeline>
<codeline lineno="385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/>var<sp/>insertFunction<sp/>=<sp/>removeToInsertLater(po.li);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/>po.childrenVisited<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/>var<sp/>l<sp/>=<sp/>po.childrenData.length-1;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(var<sp/>i<sp/>in<sp/>po.childrenData)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>nodeData<sp/>=<sp/>po.childrenData[i];</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/>po.children[i]<sp/>=<sp/>newNode(o,<sp/>po,<sp/>nodeData[0],<sp/>nodeData[1],<sp/>nodeData[2],</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>i==l);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/>insertFunction();</highlight></codeline>
<codeline lineno="395"><highlight class="normal">}</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>gotoNode(o,subIndex,root,hash,relpath)</highlight></codeline>
<codeline lineno="398"><highlight class="normal">{</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/>var<sp/>nti<sp/>=<sp/>navTreeSubIndices[subIndex][root+hash];</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>o.breadcrumbs<sp/>=<sp/>$.extend(</highlight><highlight class="keyword">true</highlight><highlight class="normal">,<sp/>[],<sp/>nti<sp/>?<sp/>nti<sp/>:<sp/>navTreeSubIndices[subIndex][root]);</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!o.breadcrumbs<sp/>&amp;&amp;<sp/>root!=NAVTREE[0][1])<sp/>{<sp/></highlight><highlight class="comment">//<sp/>fallback:<sp/>show<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/>navTo(o,NAVTREE[0][1],</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,relpath);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeAttr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(o.breadcrumbs)<sp/>{</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>o.breadcrumbs.unshift(0);<sp/></highlight><highlight class="comment">//<sp/>add<sp/>0<sp/>for<sp/>root<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/>showNode(o,<sp/>o.node,<sp/>0,<sp/>hash);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>navTo(o,root,hash,relpath)</highlight></codeline>
<codeline lineno="413"><highlight class="normal">{</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/>var<sp/>link<sp/>=<sp/>cachedLink();</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(link)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>parts<sp/>=<sp/>link.split(</highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/>root<sp/>=<sp/>parts[0];</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(parts.length&gt;1)<sp/>hash<sp/>=<sp/></highlight><highlight class="charliteral">&apos;#&apos;</highlight><highlight class="normal">+parts[1].replace(/[^\w\-]/g,</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>hash=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hash.match(/^#l\d+$/))<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>anchor=$(</highlight><highlight class="stringliteral">&apos;a[name=&apos;</highlight><highlight class="normal">+hash.substring(1)+</highlight><highlight class="charliteral">&apos;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/>glowEffect(anchor.parent(),1000);<sp/></highlight><highlight class="comment">//<sp/>line<sp/>number</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/>hash=</highlight><highlight class="stringliteral">&apos;&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>strip<sp/>line<sp/>number<sp/>anchors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/>var<sp/>url=root+hash;</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/>var<sp/>i=-1;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(NAVTREEINDEX[i+1]&lt;=url)<sp/>i++;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i==-1)<sp/>{<sp/>i=0;<sp/>root=NAVTREE[0][1];<sp/>}<sp/></highlight><highlight class="comment">//<sp/>fallback:<sp/>show<sp/>index</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navTreeSubIndices[i])<sp/>{</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/>gotoNode(o,i,root,hash,relpath)</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/>getScript(relpath+</highlight><highlight class="stringliteral">&apos;navtreeindex&apos;</highlight><highlight class="normal">+i,</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navTreeSubIndices[i]<sp/>=<sp/>eval(</highlight><highlight class="stringliteral">&apos;NAVTREEINDEX&apos;</highlight><highlight class="normal">+i);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navTreeSubIndices[i])<sp/>{</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>gotoNode(o,i,root,hash,relpath);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/>},</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>showSyncOff(n,relpath)</highlight></codeline>
<codeline lineno="443"><highlight class="normal">{</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/>n.html(</highlight><highlight class="stringliteral">&apos;&lt;img<sp/>src=&quot;&apos;</highlight><highlight class="normal">+relpath+</highlight><highlight class="stringliteral">&apos;sync_off.png&quot;<sp/>title=&quot;&apos;</highlight><highlight class="normal">+SYNCOFFMSG+</highlight><highlight class="stringliteral">&apos;&quot;/&gt;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="445"><highlight class="normal">}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>showSyncOn(n,relpath)</highlight></codeline>
<codeline lineno="448"><highlight class="normal">{</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/>n.html(</highlight><highlight class="stringliteral">&apos;&lt;img<sp/>src=&quot;&apos;</highlight><highlight class="normal">+relpath+</highlight><highlight class="stringliteral">&apos;sync_on.png&quot;<sp/>title=&quot;&apos;</highlight><highlight class="normal">+SYNCONMSG+</highlight><highlight class="stringliteral">&apos;&quot;/&gt;&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="450"><highlight class="normal">}</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>toggleSyncButton(relpath)</highlight></codeline>
<codeline lineno="453"><highlight class="normal">{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>var<sp/>navSync<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&apos;#nav-sync&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(navSync.hasClass(</highlight><highlight class="stringliteral">&apos;sync&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.removeClass(</highlight><highlight class="stringliteral">&apos;sync&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/>showSyncOff(navSync,relpath);</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/>storeLink(stripPath2(pathName())+hashUrl());</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.addClass(</highlight><highlight class="stringliteral">&apos;sync&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/>showSyncOn(navSync,relpath);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>deleteLink();</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="464"><highlight class="normal">}</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>initNavTree(toroot,relpath)</highlight></codeline>
<codeline lineno="467"><highlight class="normal">{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/>var<sp/>o<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Object();</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>o.toroot<sp/>=<sp/>toroot;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>o.node<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Object();</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/>o.node.li<sp/>=<sp/>document.getElementById(</highlight><highlight class="stringliteral">&quot;nav-tree-contents&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/>o.node.childrenData<sp/>=<sp/>NAVTREE;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/>o.node.children<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Array();</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/>o.node.childrenUL<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;ul&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/>o.node.getChildrenUL<sp/>=<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>o.node.childrenUL;<sp/>};</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/>o.node.li.appendChild(o.node.childrenUL);</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>o.node.depth<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>o.node.relpath<sp/>=<sp/>relpath;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>o.node.expanded<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>o.node.isLast<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/>o.node.plus_img<sp/>=<sp/>document.createElement(</highlight><highlight class="stringliteral">&quot;img&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/>o.node.plus_img.src<sp/>=<sp/>relpath+</highlight><highlight class="stringliteral">&quot;arrowright.png&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>o.node.plus_img.width<sp/>=<sp/>16;</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>o.node.plus_img.height<sp/>=<sp/>22;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(localStorageSupported())<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>navSync<sp/>=<sp/>$(</highlight><highlight class="stringliteral">&apos;#nav-sync&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cachedLink())<sp/>{</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showSyncOff(navSync,relpath);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>navSync.removeClass(</highlight><highlight class="stringliteral">&apos;sync&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>showSyncOn(navSync,relpath);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/>navSync.click(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){<sp/>toggleSyncButton(relpath);<sp/>});</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/>$(window).load(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/>navTo(o,toroot,hashUrl(),relpath);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/>showRoot();</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/>});</highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/>$(window).bind(</highlight><highlight class="stringliteral">&apos;hashchange&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(window.location.hash<sp/>&amp;&amp;<sp/>window.location.hash.length&gt;1){</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>a;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>($(location).attr(</highlight><highlight class="stringliteral">&apos;hash&apos;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>clslink=stripPath(pathName())+</highlight><highlight class="charliteral">&apos;:&apos;</highlight><highlight class="normal">+hashValue();</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a=$(</highlight><highlight class="stringliteral">&apos;.item<sp/>a[class$=&quot;&apos;</highlight><highlight class="normal">+clslink.replace(/&lt;/g,</highlight><highlight class="stringliteral">&apos;\\3c<sp/>&apos;</highlight><highlight class="normal">)+</highlight><highlight class="stringliteral">&apos;&quot;]&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(a==null<sp/>||<sp/>!$(a).parent().parent().hasClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">)){</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeAttr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>link=stripPath2(pathName());</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navTo(o,link,hashUrl(),relpath);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!animationInProgress)<sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;#doc-content&apos;</highlight><highlight class="normal">).scrollTop(0);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeClass(</highlight><highlight class="stringliteral">&apos;selected&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(</highlight><highlight class="stringliteral">&apos;.item&apos;</highlight><highlight class="normal">).removeAttr(</highlight><highlight class="stringliteral">&apos;id&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>navTo(o,toroot,hashUrl(),relpath);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/>})</highlight></codeline>
<codeline lineno="522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/Documentation/doxy minimum/html/navtree.js"/>
  </compounddef>
</doxygen>
