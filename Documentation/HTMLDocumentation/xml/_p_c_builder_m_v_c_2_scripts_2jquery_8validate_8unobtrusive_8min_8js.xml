<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="_p_c_builder_m_v_c_2_scripts_2jquery_8validate_8unobtrusive_8min_8js" kind="file" language="Javascript">
    <compoundname>jquery.validate.unobtrusive.min.js</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="_p_c_builder_m_v_c_2_scripts_2jquery_8validate_8unobtrusive_8min_8js_1aa4d4888597588a84fd5b1184d00c91f3" prot="public" static="no" mutable="no">
        <type>function</type>
        <definition>function a</definition>
        <argsstring></argsstring>
        <name>a</name>
        <initializer>{var d=a.validator,b,e=&quot;unobtrusiveValidation&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" line="19" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_p_c_builder_m_v_c_2_scripts_2jquery_8validate_8unobtrusive_8min_8js_1a49679efee850e553095f7d06862738a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function c</definition>
        <argsstring>(a, b, c)</argsstring>
        <name>c</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <param>
          <type>b</type>
          <defname>b</defname>
        </param>
        <param>
          <type>c</type>
          <defname>c</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" line="19" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="_p_c_builder_m_v_c_2_scripts_2jquery_8validate_8unobtrusive_8min_8js_1a5f7d9fc7ba35dc513eb3080d74d27476" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function j</definition>
        <argsstring>(a)</argsstring>
        <name>j</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" line="19" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" bodystart="19" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="_p_c_builder_m_v_c_2_scripts_2jquery_8validate_8unobtrusive_8min_8js_1a775508d78fd0500ad5567eb03db78606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function f</definition>
        <argsstring>(a)</argsstring>
        <name>f</name>
        <param>
          <type>a</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" line="19" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js" bodystart="19" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>NUGET:<sp/>BEGIN<sp/>LICENSE<sp/>TEXT</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Microsoft<sp/>grants<sp/>you<sp/>the<sp/>right<sp/>to<sp/>use<sp/>these<sp/>script<sp/>files<sp/>for<sp/>the<sp/>sole</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>purpose<sp/>of<sp/>either:<sp/>(i)<sp/>interacting<sp/>through<sp/>your<sp/>browser<sp/>with<sp/>the<sp/>Microsoft</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>website<sp/>or<sp/>online<sp/>service,<sp/>subject<sp/>to<sp/>the<sp/>applicable<sp/>licensing<sp/>or<sp/>use</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>terms;<sp/>or<sp/>(ii)<sp/>using<sp/>the<sp/>files<sp/>as<sp/>included<sp/>with<sp/>a<sp/>Microsoft<sp/>product<sp/>subject</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>to<sp/>that<sp/>product&apos;s<sp/>license<sp/>terms.<sp/>Microsoft<sp/>reserves<sp/>all<sp/>other<sp/>rights<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>files<sp/>not<sp/>expressly<sp/>granted<sp/>by<sp/>Microsoft,<sp/>whether<sp/>by<sp/>implication,<sp/>estoppel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>or<sp/>otherwise.<sp/>Insofar<sp/>as<sp/>a<sp/>script<sp/>file<sp/>is<sp/>dual<sp/>licensed<sp/>under<sp/>GPL,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Microsoft<sp/>neither<sp/>took<sp/>the<sp/>code<sp/>under<sp/>GPL<sp/>nor<sp/>distributes<sp/>it<sp/>thereunder<sp/>but</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>terms<sp/>set<sp/>out<sp/>in<sp/>this<sp/>paragraph.<sp/>All<sp/>notices<sp/>and<sp/>licenses</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>below<sp/>are<sp/>for<sp/>informational<sp/>purposes<sp/>only.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>NUGET:<sp/>END<sp/>LICENSE<sp/>TEXT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="16"><highlight class="comment">**<sp/>Unobtrusive<sp/>validation<sp/>support<sp/>library<sp/>for<sp/>jQuery<sp/>and<sp/>jQuery<sp/>Validate</highlight></codeline>
<codeline lineno="17"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>Microsoft<sp/>Corporation.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal">(a){var<sp/>d=a.validator,b,e=</highlight><highlight class="stringliteral">&quot;unobtrusiveValidation&quot;</highlight><highlight class="normal">;</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>c(a,b,c){a.rules[b]=c;</highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(a.message)a.messages[b]=a.message}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>j(a){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.replace(/^\s+|\s+$/g,</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).split(/\s*,\s*/g)}</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>f(a){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>a.replace(/([!</highlight><highlight class="stringliteral">&quot;#$%&amp;&apos;()*+,./:;&lt;=&gt;?@\[\\\]^`{|}~])/g,&quot;</highlight><highlight class="normal">\\$1</highlight><highlight class="stringliteral">&quot;)}function<sp/>h(a){return<sp/>a.substr(0,a.lastIndexOf(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;)+1)}function<sp/>g(a,b){if(a.indexOf(&quot;</highlight><highlight class="normal">*.</highlight><highlight class="stringliteral">&quot;)===0)a=a.replace(&quot;</highlight><highlight class="normal">*.</highlight><highlight class="stringliteral">&quot;,b);return<sp/>a}function<sp/>m(c,e){var<sp/>b=a(this).find(&quot;</highlight><highlight class="normal">[data-valmsg-</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;&quot;+f(e[0].name)+&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),d=b.attr(&quot;</highlight><highlight class="normal">data-valmsg-replace</highlight><highlight class="stringliteral">&quot;),g=d?a.parseJSON(d)!==false:null;b.removeClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;);c.data(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;,b);if(g){b.empty();c.removeClass(&quot;</highlight><highlight class="normal">input-validation-error</highlight><highlight class="stringliteral">&quot;).appendTo(b)}else<sp/>c.hide()}function<sp/>l(e,d){var<sp/>c=a(this).find(&quot;</highlight><highlight class="normal">[data-valmsg-summary=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),b=c.find(&quot;</highlight><highlight class="normal">ul</highlight><highlight class="stringliteral">&quot;);if(b&amp;&amp;b.length&amp;&amp;d.errorList.length){b.empty();c.addClass(&quot;</highlight><highlight class="normal">validation-summary-errors</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">validation-summary-valid</highlight><highlight class="stringliteral">&quot;);a.each(d.errorList,function(){a(&quot;</highlight><highlight class="normal">&lt;li<sp/>/&gt;</highlight><highlight class="stringliteral">&quot;).html(this.message).appendTo(b)})}}function<sp/>k(d){var<sp/>b=d.data(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;),c=b.attr(&quot;</highlight><highlight class="normal">data-valmsg-replace</highlight><highlight class="stringliteral">&quot;),e=c?a.parseJSON(c):null;if(b){b.addClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;);d.removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;);e&amp;&amp;b.empty()}}function<sp/>n(){var<sp/>b=a(this),c=&quot;</highlight><highlight class="normal">__jquery_unobtrusive_validation_form_reset</highlight><highlight class="stringliteral">&quot;;if(b.data(c))return;b.data(c,true);try{b.data(&quot;</highlight><highlight class="normal">validator</highlight><highlight class="stringliteral">&quot;).resetForm()}finally{b.removeData(c)}b.find(&quot;</highlight><highlight class="normal">.validation-summary-errors</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">validation-summary-valid</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">validation-summary-errors</highlight><highlight class="stringliteral">&quot;);b.find(&quot;</highlight><highlight class="normal">.field-validation-error</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;).removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;).find(&quot;</highlight><highlight class="normal">&gt;*</highlight><highlight class="stringliteral">&quot;).removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;)}function<sp/>i(b){var<sp/>c=a(b),f=c.data(e),i=a.proxy(n,b),g=d.unobtrusive.options||{},h=function(e,d){var<sp/>c=g[e];c&amp;&amp;a.isFunction(c)&amp;&amp;c.apply(b,d)};if(!f){f={options:{errorClass:g.errorClass||&quot;</highlight><highlight class="normal">input-validation-error</highlight><highlight class="stringliteral">&quot;,errorElement:g.errorElement||&quot;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&quot;,errorPlacement:function(){m.apply(b,arguments);h(&quot;</highlight><highlight class="normal">errorPlacement</highlight><highlight class="stringliteral">&quot;,arguments)},invalidHandler:function(){l.apply(b,arguments);h(&quot;</highlight><highlight class="normal">invalidHandler</highlight><highlight class="stringliteral">&quot;,arguments)},messages:{},rules:{},success:function(){k.apply(b,arguments);h(&quot;</highlight><highlight class="normal">success</highlight><highlight class="stringliteral">&quot;,arguments)}},attachValidation:function(){c.off(&quot;</highlight><highlight class="normal">reset.</highlight><highlight class="stringliteral">&quot;+e,i).on(&quot;</highlight><highlight class="normal">reset.</highlight><highlight class="stringliteral">&quot;+e,i).validate(this.options)},validate:function(){c.validate();return<sp/>c.valid()}};c.data(e,f)}return<sp/>f}d.unobtrusive={adapters:[],parseElement:function(b,h){var<sp/>d=a(b),f=d.parents(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;)[0],c,e,g;if(!f)return;c=i(f);c.options.rules[b.name]=e={};c.options.messages[b.name]=g={};a.each(this.adapters,function(){var<sp/>c=&quot;</highlight><highlight class="normal">data-val-</highlight><highlight class="stringliteral">&quot;+this.name,i=d.attr(c),h={};if(i!==undefined){c+=&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;;a.each(this.params,function(){h[this]=d.attr(c+this)});this.adapt({element:b,form:f,message:i,params:h,rules:e,messages:g})}});a.extend(e,{__dummy__:true});!h&amp;&amp;c.attachValidation()},parse:function(c){var<sp/>b=a(c),e=b.parents().addBack().filter(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;).add(b.find(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;)).has(&quot;</highlight><highlight class="normal">[data-val=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;);b.find(&quot;</highlight><highlight class="normal">[data-val=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;).each(function(){d.unobtrusive.parseElement(this,true)});e.each(function(){var<sp/>a=i(this);a&amp;&amp;a.attachValidation()})}};b=d.unobtrusive.adapters;b.add=function(c,a,b){if(!b){b=a;a=[]}this.push({name:c,params:a,adapt:b});return<sp/>this};b.addBool=function(a,b){return<sp/>this.add(a,function(d){c(d,b||a,true)})};b.addMinMax=function(e,g,f,a,d,b){return<sp/>this.add(e,[d||&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,b||&quot;</highlight><highlight class="normal">max</highlight><highlight class="stringliteral">&quot;],function(b){var<sp/>e=b.params.min,d=b.params.max;if(e&amp;&amp;d)c(b,a,[e,d]);else<sp/>if(e)c(b,g,e);else<sp/>d&amp;&amp;c(b,f,d)})};b.addSingleVal=function(a,b,d){return<sp/>this.add(a,[b||&quot;</highlight><highlight class="normal">val</highlight><highlight class="stringliteral">&quot;],function(e){c(e,d||a,e.params[b])})};d.addMethod(&quot;</highlight><highlight class="normal">__dummy__</highlight><highlight class="stringliteral">&quot;,function(){return<sp/>true});d.addMethod(&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,function(b,c,d){var<sp/>a;if(this.optional(c))return<sp/>true;a=(new<sp/>RegExp(d)).exec(b);return<sp/>a&amp;&amp;a.index===0&amp;&amp;a[0].length===b.length});d.addMethod(&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,function(c,d,b){var<sp/>a;if(b){a=c.match(/\W/g);a=a&amp;&amp;a.length&gt;=b}return<sp/>a});if(d.methods.extension){b.addSingleVal(&quot;</highlight><highlight class="normal">accept</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">mimtype</highlight><highlight class="stringliteral">&quot;);b.addSingleVal(&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;)}else<sp/>b.addSingleVal(&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">accept</highlight><highlight class="stringliteral">&quot;);b.addSingleVal(&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">pattern</highlight><highlight class="stringliteral">&quot;);b.addBool(&quot;</highlight><highlight class="normal">creditcard</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">date</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">digits</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">email</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">url</highlight><highlight class="stringliteral">&quot;);b.addMinMax(&quot;</highlight><highlight class="normal">length</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">rangelength</highlight><highlight class="stringliteral">&quot;).addMinMax(&quot;</highlight><highlight class="normal">range</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">max</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">range</highlight><highlight class="stringliteral">&quot;);b.addMinMax(&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;).addMinMax(&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;);b.add(&quot;</highlight><highlight class="normal">equalto</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">other</highlight><highlight class="stringliteral">&quot;],function(b){var<sp/>i=h(b.element.name),j=b.params.other,d=g(j,i),e=a(b.form).find(&quot;</highlight><highlight class="normal">:input</highlight><highlight class="stringliteral">&quot;).filter(&quot;</highlight><highlight class="normal">[name=</highlight><highlight class="stringliteral">&apos;&quot;+f(d)+&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;)[0];c(b,&quot;</highlight><highlight class="normal">equalTo</highlight><highlight class="stringliteral">&quot;,e)});b.add(&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;,function(a){(a.element.tagName.toUpperCase()!==&quot;</highlight><highlight class="normal">INPUT</highlight><highlight class="stringliteral">&quot;||a.element.type.toUpperCase()!==&quot;</highlight><highlight class="normal">CHECKBOX</highlight><highlight class="stringliteral">&quot;)&amp;&amp;c(a,&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;,true)});b.add(&quot;</highlight><highlight class="normal">remote</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">url</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">type</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">additionalfields</highlight><highlight class="stringliteral">&quot;],function(b){var<sp/>d={url:b.params.url,type:b.params.type||&quot;</highlight><highlight class="normal">GET</highlight><highlight class="stringliteral">&quot;,data:{}},e=h(b.element.name);a.each(j(b.params.additionalfields||b.element.name),function(i,h){var<sp/>c=g(h,e);d.data[c]=function(){var<sp/>d=a(b.form).find(&quot;</highlight><highlight class="normal">:input</highlight><highlight class="stringliteral">&quot;).filter(&quot;</highlight><highlight class="normal">[name=</highlight><highlight class="stringliteral">&apos;&quot;+f(c)+&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;);return<sp/>d.is(&quot;</highlight><highlight class="normal">:checkbox</highlight><highlight class="stringliteral">&quot;)?d.filter(&quot;</highlight><highlight class="normal">:checked</highlight><highlight class="stringliteral">&quot;).val()||d.filter(&quot;</highlight><highlight class="normal">:hidden</highlight><highlight class="stringliteral">&quot;).val()||&quot;</highlight><highlight class="stringliteral">&quot;:d.is(&quot;</highlight><highlight class="normal">:radio</highlight><highlight class="stringliteral">&quot;)?d.filter(&quot;</highlight><highlight class="normal">:checked</highlight><highlight class="stringliteral">&quot;).val()||&quot;</highlight><highlight class="stringliteral">&quot;:d.val()}});c(b,&quot;</highlight><highlight class="normal">remote</highlight><highlight class="stringliteral">&quot;,d)});b.add(&quot;</highlight><highlight class="normal">password</highlight><highlight class="stringliteral">&quot;,[&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;],function(a){a.params.min&amp;&amp;c(a,&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,a.params.min);a.params.nonalphamin&amp;&amp;c(a,&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,a.params.nonalphamin);a.params.regex&amp;&amp;c(a,&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,a.params.regex)});a(function(){d.unobtrusive.parse(document)})})(jQuery);</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/PCBuilderMVC/Scripts/jquery.validate.unobtrusive.min.js"/>
  </compounddef>
</doxygen>
