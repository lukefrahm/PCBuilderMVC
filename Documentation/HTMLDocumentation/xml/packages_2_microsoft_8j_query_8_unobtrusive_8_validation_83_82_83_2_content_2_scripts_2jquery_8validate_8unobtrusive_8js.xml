<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.11">
  <compounddef id="packages_2_microsoft_8j_query_8_unobtrusive_8_validation_83_82_83_2_content_2_scripts_2jquery_8validate_8unobtrusive_8js" kind="file" language="Javascript">
    <compoundname>jquery.validate.unobtrusive.js</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="packages_2_microsoft_8j_query_8_unobtrusive_8_validation_83_82_83_2_content_2_scripts_2jquery_8validate_8unobtrusive_8js_1a8ec801e1076fb7c968ab5814031eeb4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function setValidationValues</definition>
        <argsstring>(options, ruleName, value)</argsstring>
        <name>setValidationValues</name>
        <param>
          <type>options</type>
          <defname>options</defname>
        </param>
        <param>
          <type>ruleName</type>
          <defname>ruleName</defname>
        </param>
        <param>
          <type>value</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Unobtrusive validation support library for jQuery and jQuery Validate Copyright (C) Microsoft Corporation. All rights reserved. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" line="28" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="packages_2_microsoft_8j_query_8_unobtrusive_8_validation_83_82_83_2_content_2_scripts_2jquery_8validate_8unobtrusive_8js_1ae8b65fcf53d868b5efa72181c8fe5288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function splitAndTrim</definition>
        <argsstring>(value)</argsstring>
        <name>splitAndTrim</name>
        <param>
          <type>value</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" line="35" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="packages_2_microsoft_8j_query_8_unobtrusive_8_validation_83_82_83_2_content_2_scripts_2jquery_8validate_8unobtrusive_8js_1a98cdc4f24ad7542eb2cfc2d5a5710b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>function</type>
        <definition>function escapeAttributeValue</definition>
        <argsstring>(value)</argsstring>
        <name>escapeAttributeValue</name>
        <param>
          <type>value</type>
          <defname>value</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" line="39" column="1" bodyfile="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js" bodystart="39" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>NUGET:<sp/>BEGIN<sp/>LICENSE<sp/>TEXT</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/>Microsoft<sp/>grants<sp/>you<sp/>the<sp/>right<sp/>to<sp/>use<sp/>these<sp/>script<sp/>files<sp/>for<sp/>the<sp/>sole</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>purpose<sp/>of<sp/>either:<sp/>(i)<sp/>interacting<sp/>through<sp/>your<sp/>browser<sp/>with<sp/>the<sp/>Microsoft</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>website<sp/>or<sp/>online<sp/>service,<sp/>subject<sp/>to<sp/>the<sp/>applicable<sp/>licensing<sp/>or<sp/>use</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>terms;<sp/>or<sp/>(ii)<sp/>using<sp/>the<sp/>files<sp/>as<sp/>included<sp/>with<sp/>a<sp/>Microsoft<sp/>product<sp/>subject</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>to<sp/>that<sp/>product&apos;s<sp/>license<sp/>terms.<sp/>Microsoft<sp/>reserves<sp/>all<sp/>other<sp/>rights<sp/>to<sp/>the</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>files<sp/>not<sp/>expressly<sp/>granted<sp/>by<sp/>Microsoft,<sp/>whether<sp/>by<sp/>implication,<sp/>estoppel</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>or<sp/>otherwise.<sp/>Insofar<sp/>as<sp/>a<sp/>script<sp/>file<sp/>is<sp/>dual<sp/>licensed<sp/>under<sp/>GPL,</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>Microsoft<sp/>neither<sp/>took<sp/>the<sp/>code<sp/>under<sp/>GPL<sp/>nor<sp/>distributes<sp/>it<sp/>thereunder<sp/>but</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/>under<sp/>the<sp/>terms<sp/>set<sp/>out<sp/>in<sp/>this<sp/>paragraph.<sp/>All<sp/>notices<sp/>and<sp/>licenses</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>below<sp/>are<sp/>for<sp/>informational<sp/>purposes<sp/>only.</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*<sp/>NUGET:<sp/>END<sp/>LICENSE<sp/>TEXT<sp/>*/</highlight></codeline>
<codeline lineno="20"><highlight class="comment">/*jslint<sp/>white:<sp/>true,<sp/>browser:<sp/>true,<sp/>onevar:<sp/>true,<sp/>undef:<sp/>true,<sp/>nomen:<sp/>true,<sp/>eqeqeq:<sp/>true,<sp/>plusplus:<sp/>true,<sp/>bitwise:<sp/>true,<sp/>regexp:<sp/>true,<sp/>newcap:<sp/>true,<sp/>immed:<sp/>true,<sp/>strict:<sp/>false<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="comment">/*global<sp/>document:<sp/>false,<sp/>jQuery:<sp/>false<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal">(</highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>($)<sp/>{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>var<sp/>$jQval<sp/>=<sp/>$.validator,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapters,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_validation<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;unobtrusiveValidation&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>setValidationValues(options,<sp/>ruleName,<sp/>value)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.rules[ruleName]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(options.message)<sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options.messages[ruleName]<sp/>=<sp/>options.message;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>splitAndTrim(value)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.replace(/^\s+|\s+$/g,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">).split(/\s*,\s*/g);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">function</highlight><highlight class="normal"><sp/>escapeAttributeValue(value)<sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>As<sp/>mentioned<sp/>on<sp/>http://api.jquery.com/category/selectors/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.replace(/([!</highlight><highlight class="stringliteral">&quot;#$%&amp;&apos;()*+,./:;&lt;=&gt;?@\[\\\]^`{|}~])/g,<sp/>&quot;</highlight><highlight class="normal">\\$1</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="42"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="44"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>getModelPrefix(fieldName)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>fieldName.substr(0,<sp/>fieldName.lastIndexOf(&quot;</highlight><highlight class="normal">.</highlight><highlight class="stringliteral">&quot;)<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="46"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="48"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>appendModelPrefix(value,<sp/>prefix)<sp/>{</highlight></codeline>
<codeline lineno="49"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(value.indexOf(&quot;</highlight><highlight class="normal">*.</highlight><highlight class="stringliteral">&quot;)<sp/>===<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>=<sp/>value.replace(&quot;</highlight><highlight class="normal">*.</highlight><highlight class="stringliteral">&quot;,<sp/>prefix);</highlight></codeline>
<codeline lineno="51"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="52"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>value;</highlight></codeline>
<codeline lineno="53"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="54"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="55"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>onError(error,<sp/>inputElement)<sp/>{<sp/><sp/>//<sp/>&apos;this&apos;<sp/>is<sp/>the<sp/>form<sp/>element</highlight></codeline>
<codeline lineno="56"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>container<sp/>=<sp/>$(this).find(&quot;</highlight><highlight class="normal">[data-valmsg-</highlight><highlight class="keywordflow">for</highlight><highlight class="normal">=</highlight><highlight class="stringliteral">&apos;&quot;<sp/>+<sp/>escapeAttributeValue(inputElement[0].name)<sp/>+<sp/>&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="57"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replaceAttrValue<sp/>=<sp/>container.attr(&quot;</highlight><highlight class="normal">data-valmsg-replace</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="58"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>=<sp/>replaceAttrValue<sp/>?<sp/>$.parseJSON(replaceAttrValue)<sp/>!==<sp/>false<sp/>:<sp/>null;</highlight></codeline>
<codeline lineno="59"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="60"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.removeClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;).addClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="61"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.data(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;,<sp/>container);</highlight></codeline>
<codeline lineno="62"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="63"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(replace)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.empty();</highlight></codeline>
<codeline lineno="65"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.removeClass(&quot;</highlight><highlight class="normal">input-validation-error</highlight><highlight class="stringliteral">&quot;).appendTo(container);</highlight></codeline>
<codeline lineno="66"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>{</highlight></codeline>
<codeline lineno="68"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.hide();</highlight></codeline>
<codeline lineno="69"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="70"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="71"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="72"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>onErrors(event,<sp/>validator)<sp/>{<sp/><sp/>//<sp/>&apos;this&apos;<sp/>is<sp/>the<sp/>form<sp/>element</highlight></codeline>
<codeline lineno="73"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>container<sp/>=<sp/>$(this).find(&quot;</highlight><highlight class="normal">[data-valmsg-summary=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="74"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list<sp/>=<sp/>container.find(&quot;</highlight><highlight class="normal">ul</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="75"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="76"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(list<sp/>&amp;&amp;<sp/>list.length<sp/>&amp;&amp;<sp/>validator.errorList.length)<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list.empty();</highlight></codeline>
<codeline lineno="78"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.addClass(&quot;</highlight><highlight class="normal">validation-summary-errors</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">validation-summary-valid</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="79"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="80"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$.each(validator.errorList,<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$(&quot;</highlight><highlight class="normal">&lt;li<sp/>/&gt;</highlight><highlight class="stringliteral">&quot;).html(this.message).appendTo(list);</highlight></codeline>
<codeline lineno="82"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="83"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="85"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="86"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>onSuccess(error)<sp/>{<sp/><sp/>//<sp/>&apos;this&apos;<sp/>is<sp/>the<sp/>form<sp/>element</highlight></codeline>
<codeline lineno="87"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>container<sp/>=<sp/>error.data(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="88"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replaceAttrValue<sp/>=<sp/>container.attr(&quot;</highlight><highlight class="normal">data-valmsg-replace</highlight><highlight class="stringliteral">&quot;),</highlight></codeline>
<codeline lineno="89"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>replace<sp/>=<sp/>replaceAttrValue<sp/>?<sp/>$.parseJSON(replaceAttrValue)<sp/>:<sp/>null;</highlight></codeline>
<codeline lineno="90"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="91"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(container)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.addClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;).removeClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="93"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error.removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="94"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="95"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(replace)<sp/>{</highlight></codeline>
<codeline lineno="96"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>container.empty();</highlight></codeline>
<codeline lineno="97"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="101"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>onReset(event)<sp/>{<sp/><sp/>//<sp/>&apos;this&apos;<sp/>is<sp/>the<sp/>form<sp/>element</highlight></codeline>
<codeline lineno="102"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>$form<sp/>=<sp/>$(this),</highlight></codeline>
<codeline lineno="103"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/>=<sp/>&apos;__jquery_unobtrusive_validation_form_reset&apos;;</highlight></codeline>
<codeline lineno="104"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>($form.data(key))<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="106"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>a<sp/>flag<sp/>that<sp/>indicates<sp/>we&apos;re<sp/>currently<sp/>resetting<sp/>the<sp/>form.</highlight></codeline>
<codeline lineno="108"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.data(key,<sp/>true);</highlight></codeline>
<codeline lineno="109"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>try<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.data(&quot;</highlight><highlight class="normal">validator</highlight><highlight class="stringliteral">&quot;).resetForm();</highlight></codeline>
<codeline lineno="111"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>finally<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.removeData(key);</highlight></codeline>
<codeline lineno="113"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="115"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.find(&quot;</highlight><highlight class="normal">.validation-summary-errors</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="116"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addClass(&quot;</highlight><highlight class="normal">validation-summary-valid</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="117"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.removeClass(&quot;</highlight><highlight class="normal">validation-summary-errors</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="118"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.find(&quot;</highlight><highlight class="normal">.field-validation-error</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="119"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addClass(&quot;</highlight><highlight class="normal">field-validation-valid</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="120"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.removeClass(&quot;</highlight><highlight class="normal">field-validation-error</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="121"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="122"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.find(&quot;</highlight><highlight class="normal">&gt;*</highlight><highlight class="stringliteral">&quot;)<sp/><sp/>//<sp/>If<sp/>we<sp/>were<sp/>using<sp/>valmsg-replace,<sp/>get<sp/>the<sp/>underlying<sp/>error</highlight></codeline>
<codeline lineno="123"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.removeData(&quot;</highlight><highlight class="normal">unobtrusiveContainer</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="124"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="126"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>function<sp/>validationInfo(form)<sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>$form<sp/>=<sp/>$(form),</highlight></codeline>
<codeline lineno="128"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>$form.data(data_validation),</highlight></codeline>
<codeline lineno="129"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onResetProxy<sp/>=<sp/>$.proxy(onReset,<sp/>form),</highlight></codeline>
<codeline lineno="130"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defaultOptions<sp/>=<sp/>$jQval.unobtrusive.options<sp/>||<sp/>{},</highlight></codeline>
<codeline lineno="131"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execInContext<sp/>=<sp/>function<sp/>(name,<sp/>args)<sp/>{</highlight></codeline>
<codeline lineno="132"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>func<sp/>=<sp/>defaultOptions[name];</highlight></codeline>
<codeline lineno="133"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>func<sp/>&amp;&amp;<sp/>$.isFunction(func)<sp/>&amp;&amp;<sp/>func.apply(form,<sp/>args);</highlight></codeline>
<codeline lineno="134"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="136"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!result)<sp/>{</highlight></codeline>
<codeline lineno="137"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>options:<sp/>{<sp/><sp/>//<sp/>options<sp/>structure<sp/>passed<sp/>to<sp/>jQuery<sp/>Validate&apos;s<sp/>validate()<sp/>method</highlight></codeline>
<codeline lineno="139"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorClass:<sp/>defaultOptions.errorClass<sp/>||<sp/>&quot;</highlight><highlight class="normal">input-validation-error</highlight><highlight class="stringliteral">&quot;,</highlight></codeline>
<codeline lineno="140"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorElement:<sp/>defaultOptions.errorElement<sp/>||<sp/>&quot;</highlight><highlight class="normal">span</highlight><highlight class="stringliteral">&quot;,</highlight></codeline>
<codeline lineno="141"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errorPlacement:<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="142"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onError.apply(form,<sp/>arguments);</highlight></codeline>
<codeline lineno="143"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execInContext(&quot;</highlight><highlight class="normal">errorPlacement</highlight><highlight class="stringliteral">&quot;,<sp/>arguments);</highlight></codeline>
<codeline lineno="144"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="145"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invalidHandler:<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onErrors.apply(form,<sp/>arguments);</highlight></codeline>
<codeline lineno="147"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execInContext(&quot;</highlight><highlight class="normal">invalidHandler</highlight><highlight class="stringliteral">&quot;,<sp/>arguments);</highlight></codeline>
<codeline lineno="148"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="149"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages:<sp/>{},</highlight></codeline>
<codeline lineno="150"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rules:<sp/>{},</highlight></codeline>
<codeline lineno="151"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success:<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="152"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onSuccess.apply(form,<sp/>arguments);</highlight></codeline>
<codeline lineno="153"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>execInContext(&quot;</highlight><highlight class="normal">success</highlight><highlight class="stringliteral">&quot;,<sp/>arguments);</highlight></codeline>
<codeline lineno="154"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="155"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="156"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>attachValidation:<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="157"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form</highlight></codeline>
<codeline lineno="158"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.off(&quot;</highlight><highlight class="normal">reset.</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>data_validation,<sp/>onResetProxy)</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.on(&quot;</highlight><highlight class="normal">reset.</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>data_validation,<sp/>onResetProxy)</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.validate(this.options);</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>validate:<sp/>function<sp/>()<sp/>{<sp/><sp/>//<sp/>a<sp/>validation<sp/>function<sp/>that<sp/>is<sp/>called<sp/>by<sp/>unobtrusive<sp/>Ajax</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.validate();</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>$form.valid();</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="166"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="167"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$form.data(data_validation,<sp/>result);</highlight></codeline>
<codeline lineno="168"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="170"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>result;</highlight></codeline>
<codeline lineno="171"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="173"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>$jQval.unobtrusive<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapters:<sp/>[],</highlight></codeline>
<codeline lineno="175"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="176"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parseElement:<sp/>function<sp/>(element,<sp/>skipAttach)<sp/>{</highlight></codeline>
<codeline lineno="185"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>$element<sp/>=<sp/>$(element),</highlight></codeline>
<codeline lineno="186"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>form<sp/>=<sp/>$element.parents(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;)[0],</highlight></codeline>
<codeline lineno="187"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valInfo,<sp/>rules,<sp/>messages;</highlight></codeline>
<codeline lineno="188"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="189"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!form)<sp/>{<sp/><sp/>//<sp/>Cannot<sp/>do<sp/>client-side<sp/>validation<sp/>without<sp/>a<sp/>form</highlight></codeline>
<codeline lineno="190"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return;</highlight></codeline>
<codeline lineno="191"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="193"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valInfo<sp/>=<sp/>validationInfo(form);</highlight></codeline>
<codeline lineno="194"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valInfo.options.rules[element.name]<sp/>=<sp/>rules<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="195"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valInfo.options.messages[element.name]<sp/>=<sp/>messages<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="196"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="197"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$.each(this.adapters,<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="198"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>prefix<sp/>=<sp/>&quot;</highlight><highlight class="normal">data-val-</highlight><highlight class="stringliteral">&quot;<sp/>+<sp/>this.name,</highlight></codeline>
<codeline lineno="199"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/>=<sp/>$element.attr(prefix),</highlight></codeline>
<codeline lineno="200"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramValues<sp/>=<sp/>{};</highlight></codeline>
<codeline lineno="201"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="202"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(message<sp/>!==<sp/>undefined)<sp/>{<sp/><sp/>//<sp/>Compare<sp/>against<sp/>undefined,<sp/>because<sp/>an<sp/>empty<sp/>message<sp/>is<sp/>legal<sp/>(and<sp/>falsy)</highlight></codeline>
<codeline lineno="203"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>+=<sp/>&quot;</highlight><highlight class="normal">-</highlight><highlight class="stringliteral">&quot;;</highlight></codeline>
<codeline lineno="204"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="205"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$.each(this.params,<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="206"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>paramValues[this]<sp/>=<sp/>$element.attr(prefix<sp/>+<sp/>this);</highlight></codeline>
<codeline lineno="207"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="208"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="209"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.adapt({</highlight></codeline>
<codeline lineno="210"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element:<sp/>element,</highlight></codeline>
<codeline lineno="211"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>form:<sp/>form,</highlight></codeline>
<codeline lineno="212"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message:<sp/>message,</highlight></codeline>
<codeline lineno="213"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params:<sp/>paramValues,</highlight></codeline>
<codeline lineno="214"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rules:<sp/>rules,</highlight></codeline>
<codeline lineno="215"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>messages:<sp/>messages</highlight></codeline>
<codeline lineno="216"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="217"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$.extend(rules,<sp/>{<sp/>&quot;</highlight><highlight class="normal">__dummy__</highlight><highlight class="stringliteral">&quot;:<sp/>true<sp/>});</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!skipAttach)<sp/>{</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valInfo.attachValidation();</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="226"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="227"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parse:<sp/>function<sp/>(selector)<sp/>{</highlight></codeline>
<codeline lineno="234"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="235"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>$forms<sp/>includes<sp/>all<sp/>forms<sp/>in<sp/>selector&apos;s<sp/>DOM<sp/>hierarchy<sp/>(parent,<sp/>children<sp/>and<sp/>self)<sp/>that<sp/>have<sp/>at<sp/>least<sp/>one</highlight></codeline>
<codeline lineno="236"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>element<sp/>with<sp/>data-val=true</highlight></codeline>
<codeline lineno="237"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>$selector<sp/>=<sp/>$(selector),</highlight></codeline>
<codeline lineno="238"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$forms<sp/>=<sp/>$selector.parents()</highlight></codeline>
<codeline lineno="239"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.addBack()</highlight></codeline>
<codeline lineno="240"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.filter(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;)</highlight></codeline>
<codeline lineno="241"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.add($selector.find(&quot;</highlight><highlight class="normal">form</highlight><highlight class="stringliteral">&quot;))</highlight></codeline>
<codeline lineno="242"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>.has(&quot;</highlight><highlight class="normal">[data-val=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="243"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="244"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$selector.find(&quot;</highlight><highlight class="normal">[data-val=</highlight><highlight class="keyword">true</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;).each(function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$jQval.unobtrusive.parseElement(this,<sp/>true);</highlight></codeline>
<codeline lineno="246"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="247"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="248"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$forms.each(function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="249"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>info<sp/>=<sp/>validationInfo(this);</highlight></codeline>
<codeline lineno="250"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(info)<sp/>{</highlight></codeline>
<codeline lineno="251"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info.attachValidation();</highlight></codeline>
<codeline lineno="252"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="254"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="256"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="257"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters<sp/>=<sp/>$jQval.unobtrusive.adapters;</highlight></codeline>
<codeline lineno="258"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="259"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.add<sp/>=<sp/>function<sp/>(adapterName,<sp/>params,<sp/>fn)<sp/>{</highlight></codeline>
<codeline lineno="269"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(!fn)<sp/>{<sp/><sp/>//<sp/>Called<sp/>with<sp/>no<sp/>params,<sp/>just<sp/>a<sp/>function</highlight></codeline>
<codeline lineno="270"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fn<sp/>=<sp/>params;</highlight></codeline>
<codeline lineno="271"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>params<sp/>=<sp/>[];</highlight></codeline>
<codeline lineno="272"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="273"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this.push({<sp/>name:<sp/>adapterName,<sp/>params:<sp/>params,<sp/>adapt:<sp/>fn<sp/>});</highlight></codeline>
<codeline lineno="274"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this;</highlight></codeline>
<codeline lineno="275"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="276"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="277"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addBool<sp/>=<sp/>function<sp/>(adapterName,<sp/>ruleName)<sp/>{</highlight></codeline>
<codeline lineno="285"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this.add(adapterName,<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="286"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>ruleName<sp/>||<sp/>adapterName,<sp/>true);</highlight></codeline>
<codeline lineno="287"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addMinMax<sp/>=<sp/>function<sp/>(adapterName,<sp/>minRuleName,<sp/>maxRuleName,<sp/>minMaxRuleName,<sp/>minAttribute,<sp/>maxAttribute)<sp/>{</highlight></codeline>
<codeline lineno="307"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this.add(adapterName,<sp/>[minAttribute<sp/>||<sp/>&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,<sp/>maxAttribute<sp/>||<sp/>&quot;</highlight><highlight class="normal">max</highlight><highlight class="stringliteral">&quot;],<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>min<sp/>=<sp/>options.params.min,</highlight></codeline>
<codeline lineno="309"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>options.params.max;</highlight></codeline>
<codeline lineno="310"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="311"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(min<sp/>&amp;&amp;<sp/>max)<sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>minMaxRuleName,<sp/>[min,<sp/>max]);</highlight></codeline>
<codeline lineno="313"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="314"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(min)<sp/>{</highlight></codeline>
<codeline lineno="315"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>minRuleName,<sp/>min);</highlight></codeline>
<codeline lineno="316"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="317"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(max)<sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>maxRuleName,<sp/>max);</highlight></codeline>
<codeline lineno="319"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="320"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="321"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="322"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="323"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addSingleVal<sp/>=<sp/>function<sp/>(adapterName,<sp/>attribute,<sp/>ruleName)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>this.add(adapterName,<sp/>[attribute<sp/>||<sp/>&quot;</highlight><highlight class="normal">val</highlight><highlight class="stringliteral">&quot;],<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>ruleName<sp/>||<sp/>adapterName,<sp/>options.params[attribute]);</highlight></codeline>
<codeline lineno="335"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="336"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="337"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="338"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>$jQval.addMethod(&quot;</highlight><highlight class="normal">__dummy__</highlight><highlight class="stringliteral">&quot;,<sp/>function<sp/>(value,<sp/>element,<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="340"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="341"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="342"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>$jQval.addMethod(&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,<sp/>function<sp/>(value,<sp/>element,<sp/>params)<sp/>{</highlight></codeline>
<codeline lineno="343"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>match;</highlight></codeline>
<codeline lineno="344"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(this.optional(element))<sp/>{</highlight></codeline>
<codeline lineno="345"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>true;</highlight></codeline>
<codeline lineno="346"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="348"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>new<sp/>RegExp(params).exec(value);</highlight></codeline>
<codeline lineno="349"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>(match<sp/>&amp;&amp;<sp/>(match.index<sp/>===<sp/>0)<sp/>&amp;&amp;<sp/>(match[0].length<sp/>===<sp/>value.length));</highlight></codeline>
<codeline lineno="350"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="351"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="352"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>$jQval.addMethod(&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,<sp/>function<sp/>(value,<sp/>element,<sp/>nonalphamin)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>match;</highlight></codeline>
<codeline lineno="354"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(nonalphamin)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>value.match(/\W/g);</highlight></codeline>
<codeline lineno="356"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>match<sp/>&amp;&amp;<sp/>match.length<sp/>&gt;=<sp/>nonalphamin;</highlight></codeline>
<codeline lineno="357"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="358"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>match;</highlight></codeline>
<codeline lineno="359"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="360"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="361"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>if<sp/>($jQval.methods.extension)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapters.addSingleVal(&quot;</highlight><highlight class="normal">accept</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">mimtype</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="363"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapters.addSingleVal(&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="364"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{</highlight></codeline>
<codeline lineno="365"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>for<sp/>backward<sp/>compatibility,<sp/>when<sp/>the<sp/>&apos;extension&apos;<sp/>validation<sp/>method<sp/>does<sp/>not<sp/>exist,<sp/>such<sp/>as<sp/>with<sp/>versions</highlight></codeline>
<codeline lineno="366"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>of<sp/>JQuery<sp/>Validation<sp/>plugin<sp/>prior<sp/>to<sp/>1.10,<sp/>we<sp/>should<sp/>use<sp/>the<sp/>&apos;accept&apos;<sp/>method<sp/>for</highlight></codeline>
<codeline lineno="367"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>validating<sp/>the<sp/>extension,<sp/>and<sp/>ignore<sp/>mime-type<sp/>validations<sp/>as<sp/>they<sp/>are<sp/>not<sp/>supported.</highlight></codeline>
<codeline lineno="368"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>adapters.addSingleVal(&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">extension</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">accept</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="369"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="370"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="371"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addSingleVal(&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">pattern</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="372"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addBool(&quot;</highlight><highlight class="normal">creditcard</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">date</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">digits</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">email</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">number</highlight><highlight class="stringliteral">&quot;).addBool(&quot;</highlight><highlight class="normal">url</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="373"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addMinMax(&quot;</highlight><highlight class="normal">length</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">rangelength</highlight><highlight class="stringliteral">&quot;).addMinMax(&quot;</highlight><highlight class="normal">range</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">max</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">range</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="374"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.addMinMax(&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;).addMinMax(&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">maxlength</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="375"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.add(&quot;</highlight><highlight class="normal">equalto</highlight><highlight class="stringliteral">&quot;,<sp/>[&quot;</highlight><highlight class="normal">other</highlight><highlight class="stringliteral">&quot;],<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>prefix<sp/>=<sp/>getModelPrefix(options.element.name),</highlight></codeline>
<codeline lineno="377"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>other<sp/>=<sp/>options.params.other,</highlight></codeline>
<codeline lineno="378"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fullOtherName<sp/>=<sp/>appendModelPrefix(other,<sp/>prefix),</highlight></codeline>
<codeline lineno="379"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>=<sp/>$(options.form).find(&quot;</highlight><highlight class="normal">:input</highlight><highlight class="stringliteral">&quot;).filter(&quot;</highlight><highlight class="normal">[name=</highlight><highlight class="stringliteral">&apos;&quot;<sp/>+<sp/>escapeAttributeValue(fullOtherName)<sp/>+<sp/>&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;)[0];</highlight></codeline>
<codeline lineno="380"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="381"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">equalTo</highlight><highlight class="stringliteral">&quot;,<sp/>element);</highlight></codeline>
<codeline lineno="382"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="383"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.add(&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;,<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>jQuery<sp/>Validate<sp/>equates<sp/>&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;<sp/>with<sp/>&quot;</highlight><highlight class="normal">mandatory</highlight><highlight class="stringliteral">&quot;<sp/>for<sp/>checkbox<sp/>elements</highlight></codeline>
<codeline lineno="385"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(options.element.tagName.toUpperCase()<sp/>!==<sp/>&quot;</highlight><highlight class="normal">INPUT</highlight><highlight class="stringliteral">&quot;<sp/>||<sp/>options.element.type.toUpperCase()<sp/>!==<sp/>&quot;</highlight><highlight class="normal">CHECKBOX</highlight><highlight class="stringliteral">&quot;)<sp/>{</highlight></codeline>
<codeline lineno="386"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">required</highlight><highlight class="stringliteral">&quot;,<sp/>true);</highlight></codeline>
<codeline lineno="387"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="388"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="389"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.add(&quot;</highlight><highlight class="normal">remote</highlight><highlight class="stringliteral">&quot;,<sp/>[&quot;</highlight><highlight class="normal">url</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">type</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">additionalfields</highlight><highlight class="stringliteral">&quot;],<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="390"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>value<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="391"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>url:<sp/>options.params.url,</highlight></codeline>
<codeline lineno="392"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<sp/>options.params.type<sp/>||<sp/>&quot;</highlight><highlight class="normal">GET</highlight><highlight class="stringliteral">&quot;,</highlight></codeline>
<codeline lineno="393"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data:<sp/>{}</highlight></codeline>
<codeline lineno="394"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>},</highlight></codeline>
<codeline lineno="395"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prefix<sp/>=<sp/>getModelPrefix(options.element.name);</highlight></codeline>
<codeline lineno="396"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="397"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$.each(splitAndTrim(options.params.additionalfields<sp/>||<sp/>options.element.name),<sp/>function<sp/>(i,<sp/>fieldName)<sp/>{</highlight></codeline>
<codeline lineno="398"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>paramName<sp/>=<sp/>appendModelPrefix(fieldName,<sp/>prefix);</highlight></codeline>
<codeline lineno="399"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value.data[paramName]<sp/>=<sp/>function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>field<sp/>=<sp/>$(options.form).find(&quot;</highlight><highlight class="normal">:input</highlight><highlight class="stringliteral">&quot;).filter(&quot;</highlight><highlight class="normal">[name=</highlight><highlight class="stringliteral">&apos;&quot;<sp/>+<sp/>escapeAttributeValue(paramName)<sp/>+<sp/>&quot;&apos;</highlight><highlight class="normal">]</highlight><highlight class="stringliteral">&quot;);</highlight></codeline>
<codeline lineno="401"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>For<sp/>checkboxes<sp/>and<sp/>radio<sp/>buttons,<sp/>only<sp/>pick<sp/>up<sp/>values<sp/>from<sp/>checked<sp/>fields.</highlight></codeline>
<codeline lineno="402"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(field.is(&quot;</highlight><highlight class="normal">:checkbox</highlight><highlight class="stringliteral">&quot;))<sp/>{</highlight></codeline>
<codeline lineno="403"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>field.filter(&quot;</highlight><highlight class="normal">:checked</highlight><highlight class="stringliteral">&quot;).val()<sp/>||<sp/>field.filter(&quot;</highlight><highlight class="normal">:hidden</highlight><highlight class="stringliteral">&quot;).val()<sp/>||<sp/>&apos;&apos;;</highlight></codeline>
<codeline lineno="404"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>else<sp/>if<sp/>(field.is(&quot;</highlight><highlight class="normal">:radio</highlight><highlight class="stringliteral">&quot;))<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>field.filter(&quot;</highlight><highlight class="normal">:checked</highlight><highlight class="stringliteral">&quot;).val()<sp/>||<sp/>&apos;&apos;;</highlight></codeline>
<codeline lineno="407"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>field.val();</highlight></codeline>
<codeline lineno="409"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="410"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="411"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="412"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">remote</highlight><highlight class="stringliteral">&quot;,<sp/>value);</highlight></codeline>
<codeline lineno="413"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="414"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>adapters.add(&quot;</highlight><highlight class="normal">password</highlight><highlight class="stringliteral">&quot;,<sp/>[&quot;</highlight><highlight class="normal">min</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;],<sp/>function<sp/>(options)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(options.params.min)<sp/>{</highlight></codeline>
<codeline lineno="416"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">minlength</highlight><highlight class="stringliteral">&quot;,<sp/>options.params.min);</highlight></codeline>
<codeline lineno="417"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="418"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(options.params.nonalphamin)<sp/>{</highlight></codeline>
<codeline lineno="419"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">nonalphamin</highlight><highlight class="stringliteral">&quot;,<sp/>options.params.nonalphamin);</highlight></codeline>
<codeline lineno="420"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="421"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(options.params.regex)<sp/>{</highlight></codeline>
<codeline lineno="422"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setValidationValues(options,<sp/>&quot;</highlight><highlight class="normal">regex</highlight><highlight class="stringliteral">&quot;,<sp/>options.params.regex);</highlight></codeline>
<codeline lineno="423"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="424"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="425"><highlight class="stringliteral"></highlight></codeline>
<codeline lineno="426"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>$(function<sp/>()<sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>$jQval.unobtrusive.parse(document);</highlight></codeline>
<codeline lineno="428"><highlight class="stringliteral"><sp/><sp/><sp/><sp/>});</highlight></codeline>
<codeline lineno="429"><highlight class="stringliteral">}(jQuery));</highlight></codeline>
    </programlisting>
    <location file="C:/Users/nh228u08/Desktop/FinalProject/FinalProject/PCBuilder/packages/Microsoft.jQuery.Unobtrusive.Validation.3.2.3/Content/Scripts/jquery.validate.unobtrusive.js"/>
  </compounddef>
</doxygen>
